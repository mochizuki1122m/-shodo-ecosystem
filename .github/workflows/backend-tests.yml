name: Backend Tests

on:
  push:
    paths:
      - 'shodo-ecosystem/backend/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    paths:
      - 'shodo-ecosystem/backend/**'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: shodo
          POSTGRES_USER: shodo
          POSTGRES_PASSWORD: shodo_pass
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U shodo" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: shodo-ecosystem/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests (light)
        working-directory: shodo-ecosystem/backend
        env:
          PYTHONPATH: ${{ github.workspace }}/shodo-ecosystem/backend:${{ github.workspace }}/shodo-ecosystem/backend/src
          LIGHT_TESTS: '1'
        run: |
          pytest -q tests/unit

      - name: Run integration tests
        working-directory: shodo-ecosystem/backend
        env:
          PYTHONPATH: ${{ github.workspace }}/shodo-ecosystem/backend:${{ github.workspace }}/shodo-ecosystem/backend/src
          DATABASE_URL: postgresql+asyncpg://shodo:shodo_pass@localhost:5432/shodo
          REDIS_URL: redis://localhost:6379/1
          SECRET_KEY: ci-secret
          DEBUG: 'true'
        run: |
          pytest -q -k "integration or auth or connectors or lpr_system" || true