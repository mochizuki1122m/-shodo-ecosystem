{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { login as apiLogin, logout as apiLogout, getCurrentUser } from '../services/api';\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}) => {\n  const response = await apiLogin(email, password);\n  localStorage.setItem('authToken', response.token);\n  return response.user;\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await apiLogout();\n  localStorage.removeItem('authToken');\n});\nexport const fetchCurrentUser = createAsyncThunk('auth/fetchCurrentUser', async () => {\n  const response = await getCurrentUser();\n  return response;\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = action.error.message || 'ログインに失敗しました';\n    })\n    // Logout\n    .addCase(logout.fulfilled, state => {\n      state.isAuthenticated = false;\n      state.user = null;\n    })\n    // Fetch current user\n    .addCase(fetchCurrentUser.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(fetchCurrentUser.rejected, state => {\n      state.isAuthenticated = false;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","login","apiLogin","logout","apiLogout","getCurrentUser","initialState","user","isAuthenticated","isLoading","error","email","password","response","localStorage","setItem","token","removeItem","fetchCurrentUser","authSlice","name","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["/workspace/shodo-ecosystem/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { login as apiLogin, logout as apiLogout, getCurrentUser } from '../services/api';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }: { email: string; password: string }) => {\n    const response = await apiLogin(email, password);\n    localStorage.setItem('authToken', response.token);\n    return response.user;\n  }\n);\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await apiLogout();\n  localStorage.removeItem('authToken');\n});\n\nexport const fetchCurrentUser = createAsyncThunk('auth/fetchCurrentUser', async () => {\n  const response = await getCurrentUser();\n  return response;\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.user = null;\n        state.error = action.error.message || 'ログインに失敗しました';\n      })\n      // Logout\n      .addCase(logout.fulfilled, (state) => {\n        state.isAuthenticated = false;\n        state.user = null;\n      })\n      // Fetch current user\n      .addCase(fetchCurrentUser.fulfilled, (state, action) => {\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(fetchCurrentUser.rejected, (state) => {\n        state.isAuthenticated = false;\n        state.user = null;\n      });\n  },\n});\n\nexport const { clearError } = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}