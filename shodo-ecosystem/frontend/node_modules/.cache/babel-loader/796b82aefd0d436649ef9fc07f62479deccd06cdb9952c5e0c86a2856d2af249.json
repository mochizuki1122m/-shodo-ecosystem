{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={sidebarOpen:true,darkMode:false,loading:false,notification:null};const uiSlice=createSlice({name:'ui',initialState,reducers:{toggleSidebar:state=>{state.sidebarOpen=!state.sidebarOpen;},setSidebarOpen:(state,action)=>{state.sidebarOpen=action.payload;},toggleDarkMode:state=>{state.darkMode=!state.darkMode;},setLoading:(state,action)=>{state.loading=action.payload;},showNotification:(state,action)=>{state.notification={open:true,message:action.payload.message,severity:action.payload.severity};},hideNotification:state=>{if(state.notification){state.notification.open=false;}},clearNotification:state=>{state.notification=null;}}});export const{toggleSidebar,setSidebarOpen,toggleDarkMode,setLoading,showNotification,hideNotification,clearNotification}=uiSlice.actions;export default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","sidebarOpen","darkMode","loading","notification","uiSlice","name","reducers","toggleSidebar","state","setSidebarOpen","action","payload","toggleDarkMode","setLoading","showNotification","open","message","severity","hideNotification","clearNotification","actions","reducer"],"sources":["/workspace/shodo-ecosystem/frontend/src/store/uiSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface UIState {\n  sidebarOpen: boolean;\n  darkMode: boolean;\n  loading: boolean;\n  notification: {\n    open: boolean;\n    message: string;\n    severity: 'success' | 'error' | 'warning' | 'info';\n  } | null;\n}\n\nconst initialState: UIState = {\n  sidebarOpen: true,\n  darkMode: false,\n  loading: false,\n  notification: null,\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: (state) => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action: PayloadAction<boolean>) => {\n      state.sidebarOpen = action.payload;\n    },\n    toggleDarkMode: (state) => {\n      state.darkMode = !state.darkMode;\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    showNotification: (\n      state,\n      action: PayloadAction<{\n        message: string;\n        severity: 'success' | 'error' | 'warning' | 'info';\n      }>\n    ) => {\n      state.notification = {\n        open: true,\n        message: action.payload.message,\n        severity: action.payload.severity,\n      };\n    },\n    hideNotification: (state) => {\n      if (state.notification) {\n        state.notification.open = false;\n      }\n    },\n    clearNotification: (state) => {\n      state.notification = null;\n    },\n  },\n});\n\nexport const {\n  toggleSidebar,\n  setSidebarOpen,\n  toggleDarkMode,\n  setLoading,\n  showNotification,\n  hideNotification,\n  clearNotification,\n} = uiSlice.actions;\n\nexport default uiSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAa7D,KAAM,CAAAC,YAAqB,CAAG,CAC5BC,WAAW,CAAE,IAAI,CACjBC,QAAQ,CAAE,KAAK,CACfC,OAAO,CAAE,KAAK,CACdC,YAAY,CAAE,IAChB,CAAC,CAED,KAAM,CAAAC,OAAO,CAAGN,WAAW,CAAC,CAC1BO,IAAI,CAAE,IAAI,CACVN,YAAY,CACZO,QAAQ,CAAE,CACRC,aAAa,CAAGC,KAAK,EAAK,CACxBA,KAAK,CAACR,WAAW,CAAG,CAACQ,KAAK,CAACR,WAAW,CACxC,CAAC,CACDS,cAAc,CAAEA,CAACD,KAAK,CAAEE,MAA8B,GAAK,CACzDF,KAAK,CAACR,WAAW,CAAGU,MAAM,CAACC,OAAO,CACpC,CAAC,CACDC,cAAc,CAAGJ,KAAK,EAAK,CACzBA,KAAK,CAACP,QAAQ,CAAG,CAACO,KAAK,CAACP,QAAQ,CAClC,CAAC,CACDY,UAAU,CAAEA,CAACL,KAAK,CAAEE,MAA8B,GAAK,CACrDF,KAAK,CAACN,OAAO,CAAGQ,MAAM,CAACC,OAAO,CAChC,CAAC,CACDG,gBAAgB,CAAEA,CAChBN,KAAK,CACLE,MAGE,GACC,CACHF,KAAK,CAACL,YAAY,CAAG,CACnBY,IAAI,CAAE,IAAI,CACVC,OAAO,CAAEN,MAAM,CAACC,OAAO,CAACK,OAAO,CAC/BC,QAAQ,CAAEP,MAAM,CAACC,OAAO,CAACM,QAC3B,CAAC,CACH,CAAC,CACDC,gBAAgB,CAAGV,KAAK,EAAK,CAC3B,GAAIA,KAAK,CAACL,YAAY,CAAE,CACtBK,KAAK,CAACL,YAAY,CAACY,IAAI,CAAG,KAAK,CACjC,CACF,CAAC,CACDI,iBAAiB,CAAGX,KAAK,EAAK,CAC5BA,KAAK,CAACL,YAAY,CAAG,IAAI,CAC3B,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXI,aAAa,CACbE,cAAc,CACdG,cAAc,CACdC,UAAU,CACVC,gBAAgB,CAChBI,gBAAgB,CAChBC,iBACF,CAAC,CAAGf,OAAO,CAACgB,OAAO,CAEnB,cAAe,CAAAhB,OAAO,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}