{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{login as apiLogin,logout as apiLogout,getCurrentUser}from'../services/api';const initialState={user:null,isAuthenticated:false,isLoading:false,error:null};export const login=createAsyncThunk('auth/login',async _ref=>{let{email,password}=_ref;const response=await apiLogin(email,password);localStorage.setItem('authToken',response.token);return response.user;});export const logout=createAsyncThunk('auth/logout',async()=>{await apiLogout();localStorage.removeItem('authToken');});export const fetchCurrentUser=createAsyncThunk('auth/fetchCurrentUser',async()=>{const response=await getCurrentUser();return response;});const authSlice=createSlice({name:'auth',initialState,reducers:{clearError:state=>{state.error=null;}},extraReducers:builder=>{builder// Login\n.addCase(login.pending,state=>{state.isLoading=true;state.error=null;}).addCase(login.fulfilled,(state,action)=>{state.isLoading=false;state.isAuthenticated=true;state.user=action.payload;state.error=null;}).addCase(login.rejected,(state,action)=>{state.isLoading=false;state.isAuthenticated=false;state.user=null;state.error=action.error.message||'ログインに失敗しました';})// Logout\n.addCase(logout.fulfilled,state=>{state.isAuthenticated=false;state.user=null;})// Fetch current user\n.addCase(fetchCurrentUser.fulfilled,(state,action)=>{state.isAuthenticated=true;state.user=action.payload;}).addCase(fetchCurrentUser.rejected,state=>{state.isAuthenticated=false;state.user=null;});}});export const{clearError}=authSlice.actions;export default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","login","apiLogin","logout","apiLogout","getCurrentUser","initialState","user","isAuthenticated","isLoading","error","_ref","email","password","response","localStorage","setItem","token","removeItem","fetchCurrentUser","authSlice","name","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["/workspace/shodo-ecosystem/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { login as apiLogin, logout as apiLogout, getCurrentUser } from '../services/api';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }: { email: string; password: string }) => {\n    const response = await apiLogin(email, password);\n    localStorage.setItem('authToken', response.token);\n    return response.user;\n  }\n);\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await apiLogout();\n  localStorage.removeItem('authToken');\n});\n\nexport const fetchCurrentUser = createAsyncThunk('auth/fetchCurrentUser', async () => {\n  const response = await getCurrentUser();\n  return response;\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.user = null;\n        state.error = action.error.message || 'ログインに失敗しました';\n      })\n      // Logout\n      .addCase(logout.fulfilled, (state) => {\n        state.isAuthenticated = false;\n        state.user = null;\n      })\n      // Fetch current user\n      .addCase(fetchCurrentUser.fulfilled, (state, action) => {\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(fetchCurrentUser.rejected, (state) => {\n        state.isAuthenticated = false;\n        state.user = null;\n      });\n  },\n});\n\nexport const { clearError } = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}