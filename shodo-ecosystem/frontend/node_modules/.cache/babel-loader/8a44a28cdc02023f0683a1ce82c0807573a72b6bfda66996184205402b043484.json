{"ast":null,"code":"var _jsxFileName = \"/workspace/shodo-ecosystem/frontend/src/components/ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  const token = localStorage.getItem('authToken');\n\n  // 開発環境では認証をスキップ\n  if (process.env.NODE_ENV === 'development') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n  if (!isAuthenticated && !token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"TPD1adLOrTdsrr/HMWf3CuTzU0I=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useSelector","Fragment","_Fragment","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","state","auth","token","localStorage","getItem","process","env","NODE_ENV","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/shodo-ecosystem/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const { isAuthenticated } = useSelector((state: RootState) => state.auth);\n  const token = localStorage.getItem('authToken');\n\n  // 開発環境では認証をスキップ\n  if (process.env.NODE_ENV === 'development') {\n    return <>{children}</>;\n  }\n\n  if (!isAuthenticated && !token) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAO1C,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM;IAAEC;EAAgB,CAAC,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAAC;EACzE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;;EAE/C;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,oBAAOZ,OAAA,CAAAF,SAAA;MAAAI,QAAA,EAAGA;IAAQ,gBAAG,CAAC;EACxB;EAEA,IAAI,CAACE,eAAe,IAAI,CAACG,KAAK,EAAE;IAC9B,oBAAOP,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBAAOlB,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CAdIF,cAA6C;EAAA,QACrBL,WAAW;AAAA;AAAAuB,EAAA,GADnClB,cAA6C;AAgBnD,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}