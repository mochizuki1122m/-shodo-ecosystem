{
  "name": "shodo-ecosystem",
  "version": "1.0.0",
  "description": "Shodo Ecosystem - SaaS Integration Platform",
  "private": true,
  "workspaces": [
    "frontend",
    "backend",
    "ai-server"
  ],
  "scripts": {
    "install": "pnpm install",
    "dev": "docker-compose up -d",
    "start": "docker-compose up",
    "stop": "docker-compose down",
    "build": "docker-compose build",
    "clean": "docker-compose down -v && rm -rf node_modules */node_modules",
    "test": "pnpm run test:unit && pnpm run test:integration && pnpm run test:e2e",
    "test:unit": "pnpm run test:unit:backend && pnpm run test:unit:frontend",
    "test:unit:backend": "cd backend && pytest tests/ -v -m unit",
    "test:unit:frontend": "cd frontend && npm test -- --coverage",
    "test:integration": "cd backend && pytest tests/ -v -m integration",
    "test:e2e": "cd e2e && npx playwright test",
    "test:e2e:ui": "cd e2e && npx playwright test --ui",
    "test:e2e:debug": "cd e2e && npx playwright test --debug",
    "lint": "pnpm run lint:backend && pnpm run lint:frontend",
    "lint:backend": "cd backend && pylint src/ --rcfile=.pylintrc",
    "lint:frontend": "cd frontend && npm run lint",
    "format": "pnpm run format:backend && pnpm run format:frontend",
    "format:backend": "cd backend && black src/ tests/ && isort src/ tests/",
    "format:frontend": "cd frontend && npm run format",
    "type-check": "pnpm run type-check:backend && pnpm run type-check:frontend",
    "type-check:backend": "cd backend && mypy src/ --config-file mypy.ini",
    "type-check:frontend": "cd frontend && npm run type-check",
    "security-check": "pnpm audit && cd backend && safety check && cd ../frontend && npm audit",
    "coverage": "pnpm run coverage:backend && pnpm run coverage:frontend",
    "coverage:backend": "cd backend && pytest tests/ --cov=src --cov-report=html --cov-report=term",
    "coverage:frontend": "cd frontend && npm test -- --coverage --watchAll=false",
    "docs": "pnpm run docs:build",
    "docs:build": "cd docs && npm run build",
    "docs:serve": "cd docs && npm run serve",
    "migrate": "cd backend && alembic upgrade head",
    "migrate:create": "cd backend && alembic revision --autogenerate -m",
    "migrate:rollback": "cd backend && alembic downgrade -1",
    "seed": "cd backend && python scripts/seed_data.py",
    "backup": "cd scripts && ./backup.sh",
    "restore": "cd scripts && ./restore.sh",
    "monitor": "docker-compose logs -f",
    "health": "curl -f http://localhost/api/v1/health || exit 1",
    "metrics": "curl -f http://localhost/metrics || exit 1"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.1",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.6",
    "@typescript-eslint/eslint-plugin": "^6.17.0",
    "@typescript-eslint/parser": "^6.17.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.1",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv": "^16.3.1",
    "wait-on": "^7.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@8.14.0",
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{py}": [
      "black",
      "isort",
      "pylint"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "pnpm run test:unit"
    }
  }
}