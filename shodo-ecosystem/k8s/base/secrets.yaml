apiVersion: v1
kind: Secret
metadata:
  name: shodo-vault-auth
  namespace: shodo
type: Opaque
data:
  # Base64 encoded Vault token (to be replaced by external-secrets or sealed-secrets)
  vault-token: "" # MUST: Use external-secrets-operator in production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shodo-vault-config
  namespace: shodo
data:
  VAULT_ADDR: "https://vault.shodo.local:8200"
  VAULT_MOUNT_POINT: "secret"
  VAULT_PATH_PREFIX: "shodo"
  VAULT_SKIP_VERIFY: "false"

---
# External Secrets Operator configuration (production)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: shodo
spec:
  provider:
    vault:
      server: "https://vault.shodo.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "shodo-backend"
          serviceAccountRef:
            name: "shodo-backend"

---
# Database credentials from Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: shodo-database-credentials
  namespace: shodo
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: database-credentials
    creationPolicy: Owner
  data:
    - secretKey: username
      remoteRef:
        key: shodo/database/postgres
        property: username
    - secretKey: password
      remoteRef:
        key: shodo/database/postgres
        property: password
    - secretKey: host
      remoteRef:
        key: shodo/database/postgres
        property: host
    - secretKey: port
      remoteRef:
        key: shodo/database/postgres
        property: port
    - secretKey: database
      remoteRef:
        key: shodo/database/postgres
        property: database

---
# Redis credentials from Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: shodo-redis-credentials
  namespace: shodo
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: redis-credentials
    creationPolicy: Owner
  data:
    - secretKey: url
      remoteRef:
        key: shodo/redis
        property: url
    - secretKey: password
      remoteRef:
        key: shodo/redis
        property: password

---
# JWT keys from Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: shodo-jwt-keys
  namespace: shodo
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: jwt-keys
    creationPolicy: Owner
  data:
    - secretKey: private-key
      remoteRef:
        key: shodo/jwt
        property: private_key
    - secretKey: public-key
      remoteRef:
        key: shodo/jwt
        property: public_key
    - secretKey: kid
      remoteRef:
        key: shodo/jwt
        property: kid

---
# API keys from Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: shodo-api-keys
  namespace: shodo
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: api-keys
    creationPolicy: Owner
  data:
    - secretKey: shopify-api-key
      remoteRef:
        key: shodo/api-keys/shopify
        property: key
    - secretKey: shopify-api-secret
      remoteRef:
        key: shodo/api-keys/shopify
        property: secret
    - secretKey: stripe-api-key
      remoteRef:
        key: shodo/api-keys/stripe
        property: key
    - secretKey: gmail-client-id
      remoteRef:
        key: shodo/api-keys/gmail
        property: client_id
    - secretKey: gmail-client-secret
      remoteRef:
        key: shodo/api-keys/gmail
        property: client_secret

---
# Encryption keys from Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: shodo-encryption-keys
  namespace: shodo
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: encryption-keys
    creationPolicy: Owner
  data:
    - secretKey: master-key
      remoteRef:
        key: shodo/encryption
        property: master_key