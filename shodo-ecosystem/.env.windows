# Shodo Ecosystem - Windows環境設定
# このファイルを.envにコピーして使用してください

# プラットフォーム設定
PLATFORM=windows
NODE_ENV=production

# Docker設定（Windows最適化）
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1
COMPOSE_PROJECT_NAME=shodo-ecosystem

# LLM設定（選択してください）
# Option 1: Ollama（推奨 - ローカルLLM）
LLM_PROVIDER=ollama
OPENAI_BASE_URL=http://host.docker.internal:11434/v1
OLLAMA_MODEL=mistral
OPENAI_API_KEY=dummy

# Option 2: OpenAI API（高品質だがコストあり）
# LLM_PROVIDER=openai
# OPENAI_API_KEY=sk-your-api-key-here
# OPENAI_MODEL=gpt-4

# Option 3: Mock（開発・テスト用）
# LLM_PROVIDER=mock
# OPENAI_BASE_URL=http://vllm:8001/v1

# API設定
API_PORT=8000
FRONTEND_PORT=3000
VLLM_PORT=8001

# データベース設定
DATABASE_URL=postgresql://shodo:shodo_pass@postgres:5432/shodo
REDIS_URL=redis://redis:6379

# セキュリティ設定
JWT_SECRET_KEY=your-secret-key-here-change-in-production
SESSION_SECRET=your-session-secret-change-in-production

# CORS設定（Windows localhost用）
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://host.docker.internal:3000

# Windows特有の設定
# ファイル監視（ホットリロード用）
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true
CHOKIDAR_INTERVAL=1000

# WSL2統合（有効な場合）
USE_WSL2=true

# パフォーマンス設定
MAX_OLD_SPACE_SIZE=4096
NODE_OPTIONS=--max-old-space-size=4096

# ログ設定
LOG_LEVEL=info
LOG_FORMAT=json
LOG_DIR=./logs

# キャッシュ設定
CACHE_TTL=3600
REDIS_CACHE_TTL=7200

# レート制限
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# GPU設定（NVIDIA GPU使用時）
# CUDA_VISIBLE_DEVICES=0
# GPU_MEMORY_FRACTION=0.9

# プロキシ設定（企業環境用）
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=http://proxy.example.com:8080
# NO_PROXY=localhost,127.0.0.1,host.docker.internal

# 開発者設定
DEBUG=false
HOT_RELOAD=true
VERBOSE_LOGGING=false

# バックアップ設定
BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=7

# 監視設定
MONITORING_ENABLED=false
METRICS_PORT=9090