name: Backend CI (docker-compose)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - cursor/**
      - ci-**
  pull_request:
    branches: [ main, develop ]

env:
  DOCKER_BUILDKIT: "1"

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker versions
        run: |
          docker --version
          docker compose version

      - name: Create backend .env (development-like)
        run: |
          cat > shodo-ecosystem/backend/.env <<'EOF'
          ENVIRONMENT=development
          DEBUG=true
          HOST=0.0.0.0
          PORT=8000
          CORS_ORIGINS=http://localhost:3000
          JWT_SECRET_KEY=dev-secret
          ENCRYPTION_KEY=dev-encryption
          VLLM_URL=http://vllm:8001
          LPR_ENFORCER_ENABLED=true
          ALLOW_LPR_TOKEN_QUERY=false
          EOF

      - name: Ensure docker compose available
        run: |
          set -e
          if docker compose version >/dev/null 2>&1; then
            echo "COMPOSE=docker compose" >> $GITHUB_ENV
          elif docker-compose --version >/dev/null 2>&1; then
            echo "COMPOSE=docker-compose" >> $GITHUB_ENV
          else
            sudo apt-get update
            sudo apt-get install -y docker-compose-plugin
            docker compose version
            echo "COMPOSE=docker compose" >> $GITHUB_ENV
          fi

      - name: Validate compose config
        working-directory: shodo-ecosystem
        run: |
          $COMPOSE -f docker-compose.yml config

      - name: Build images
        working-directory: shodo-ecosystem
        run: |
          $COMPOSE -f docker-compose.yml build --progress=plain backend vllm

      - name: Start infra and backend
        working-directory: shodo-ecosystem
        run: |
          set -e
          $COMPOSE -f docker-compose.yml up -d postgres redis vllm backend
          echo "Waiting for backend health..."
          BID=$($COMPOSE -f docker-compose.yml ps -q backend)
          for i in {1..60}; do
            STATUS=$(docker inspect -f '{{.State.Health.Status}}' "$BID" || echo "starting")
            if [ "$STATUS" = "healthy" ]; then
              echo "backend is healthy"
              break
            fi
            sleep 2
          done
          $COMPOSE -f docker-compose.yml ps

      - name: Run LPR tests inside backend container
        working-directory: shodo-ecosystem
        run: |
          $COMPOSE -f docker-compose.yml exec -T backend pytest -q tests/test_lpr_system.py

      - name: Show backend logs (on failure)
        if: failure()
        working-directory: shodo-ecosystem
        run: |
          $COMPOSE -f docker-compose.yml logs --no-color backend | tail -n 400 || true

      - name: Teardown
        if: always()
        working-directory: shodo-ecosystem
        run: |
          $COMPOSE -f docker-compose.yml down -v || true

